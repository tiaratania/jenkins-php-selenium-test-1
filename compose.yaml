services:
  jenkins:
    build:
      dockerfile: Dockerfile
    image: custom-jenkins:latest
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-net
  # SonarQube service configuration
  sonarqube:
    image: sonarqube:lts # Use the Long Term Support (LTS) version of SonarQube
    ports:
      - "9000:9000" # Map host port 9000 to container port 9000 for SonarQube web interface
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true # Disable Elasticsearch bootstrap checks
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube # URL for the SonarQube database
      - SONARQUBE_JDBC_USERNAME=sonarqube # Database username
      - SONARQUBE_JDBC_PASSWORD=sonarqube # Database password

  # PostgreSQL database service configuration
  db:
    image: postgres:latest # Use the latest version of PostgreSQL
    environment:
      POSTGRES_USER: sonarqube # Set the PostgreSQL username
      POSTGRES_PASSWORD: sonarqube # Set the PostgreSQL password
      POSTGRES_DB: sonarqube # Set the name of the database

  # nginx config
  nginxwebsvr:
    image: nginx:alpine
    container_name: nginxwebsvr
    ports:
      - "8082:80"
    volumes:
      - ./nginx_conf:/etc/nginx/conf.d
    networks:
      - jenkins-net

  mysqldb:
    image: mysql/mysql-server:8.0
    restart: always
    volumes:
      - ./mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    networks:
      - jenkins-net

volumes:
  jenkins_home:
  mysql:
  nginx:


networks:
  jenkins-net:
    driver: bridge
